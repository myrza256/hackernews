version: "3.4"
   
services:
  # rabbitmq:
  #   container_name: rabbitmq
  #   hostname: rabbitmq
  #   image: rabbitmq:latest
  #   networks:
  #     - main
  #   ports:
  #     - "5672:5672"
  #   restart: on-failure
  db:
    image: postgres
    # ports:
    #   - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  app:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
  # celery_worker:
  #   command: sh -c "wait-for rabbitmq:5672 && wait-for app:8000 -- celery -A mysite worker -l info"
  #   container_name: celery_worker
  #   depends_on:
  #     - app
  #     - db
  #     - rabbitmq
  #   deploy:
  #     replicas: 2
  #     restart_policy:
  #       condition: on-failure
  #     resources:
  #       limits:
  #         cpus: '0.50'
  #         memory: 50M
  #       reservations:
  #         cpus: '0.25'
  #         memory: 20M
  #   hostname: celery_worker
  #   image: app-image
  #   networks:
  #     - main
  #   restart: on-failure

networks:
  main:

volumes:
  postgresql-data: